// Generated by GNU Bison 3.8.2.
// Report bugs to <bug-bison@gnu.org>.
// Home page: <https://www.gnu.org/software/bison/>.

digraph "another.y"
{
  node [fontname = courier, shape = box, colorscheme = paired6]
  edge [fontname = courier]

  0 [label="State 0\n\l  0 $accept: • program $end\l"]
  0 -> 1 [style=solid label="IF"]
  0 -> 2 [style=solid label="IMPORT"]
  0 -> 3 [style=solid label="FROM"]
  0 -> 4 [style=solid label="IDENTIFIER"]
  0 -> 5 [style=dashed label="program"]
  0 -> 6 [style=dashed label="statement"]
  0 -> 7 [style=dashed label="cond"]
  0 -> 8 [style=dashed label="import"]
  0 -> 9 [style=dashed label="assignment"]
  0 -> 10 [style=dashed label="funcall"]
  1 [label="State 1\n\l  7 cond: IF • expr ':' INDENT program DEDENT\l"]
  1 -> 11 [style=solid label="IDENTIFIER"]
  1 -> 12 [style=solid label="INT"]
  1 -> 13 [style=solid label="FLOAT"]
  1 -> 14 [style=solid label="STRING"]
  1 -> 15 [style=solid label="'('"]
  1 -> 16 [style=solid label="'['"]
  1 -> 17 [style=dashed label="funcall"]
  1 -> 18 [style=dashed label="list"]
  1 -> 19 [style=dashed label="expr"]
  2 [label="State 2\n\l  8 import: IMPORT • IDENTIFIER\l  9       | IMPORT • IDENTIFIER AS IDENTIFIER\l"]
  2 -> 20 [style=solid label="IDENTIFIER"]
  3 [label="State 3\n\l 10 import: FROM • IDENTIFIER IMPORT IDENTIFIER\l 11       | FROM • IDENTIFIER IMPORT IDENTIFIER AS IDENTIFIER\l"]
  3 -> 21 [style=solid label="IDENTIFIER"]
  4 [label="State 4\n\l 12 assignment: IDENTIFIER • ASSIGNOP expr\l 13           | IDENTIFIER • ARITHASS expr\l 14 funcall: IDENTIFIER • '(' args ')'\l"]
  4 -> 22 [style=solid label="ARITHASS"]
  4 -> 23 [style=solid label="ASSIGNOP"]
  4 -> 24 [style=solid label="'('"]
  5 [label="State 5\n\l  0 $accept: program • $end\l"]
  5 -> 25 [style=solid label="$end"]
  6 [label="State 6\n\l  1 program: statement • program\l  2        | statement •\l"]
  6 -> 1 [style=solid label="IF"]
  6 -> 2 [style=solid label="IMPORT"]
  6 -> 3 [style=solid label="FROM"]
  6 -> 4 [style=solid label="IDENTIFIER"]
  6 -> 26 [style=dashed label="program"]
  6 -> 6 [style=dashed label="statement"]
  6 -> 7 [style=dashed label="cond"]
  6 -> 8 [style=dashed label="import"]
  6 -> 9 [style=dashed label="assignment"]
  6 -> 10 [style=dashed label="funcall"]
  6 -> "6R2" [style=solid]
 "6R2" [label="R2", fillcolor=3, shape=diamond, style=filled]
  7 [label="State 7\n\l  6 statement: cond •\l"]
  7 -> "7R6" [style=solid]
 "7R6" [label="R6", fillcolor=3, shape=diamond, style=filled]
  8 [label="State 8\n\l  3 statement: import •\l"]
  8 -> "8R3" [style=solid]
 "8R3" [label="R3", fillcolor=3, shape=diamond, style=filled]
  9 [label="State 9\n\l  4 statement: assignment •\l"]
  9 -> "9R4" [style=solid]
 "9R4" [label="R4", fillcolor=3, shape=diamond, style=filled]
  10 [label="State 10\n\l  5 statement: funcall •\l"]
  10 -> "10R5" [style=solid]
 "10R5" [label="R5", fillcolor=3, shape=diamond, style=filled]
  11 [label="State 11\n\l 14 funcall: IDENTIFIER • '(' args ')'\l 19 expr: IDENTIFIER •\l"]
  11 -> 24 [style=solid label="'('"]
  11 -> "11R19" [style=solid]
 "11R19" [label="R19", fillcolor=3, shape=diamond, style=filled]
  12 [label="State 12\n\l 21 expr: INT •\l"]
  12 -> "12R21" [style=solid]
 "12R21" [label="R21", fillcolor=3, shape=diamond, style=filled]
  13 [label="State 13\n\l 22 expr: FLOAT •\l"]
  13 -> "13R22" [style=solid]
 "13R22" [label="R22", fillcolor=3, shape=diamond, style=filled]
  14 [label="State 14\n\l 23 expr: STRING •\l"]
  14 -> "14R23" [style=solid]
 "14R23" [label="R23", fillcolor=3, shape=diamond, style=filled]
  15 [label="State 15\n\l 28 expr: '(' • expr ')'\l"]
  15 -> 11 [style=solid label="IDENTIFIER"]
  15 -> 12 [style=solid label="INT"]
  15 -> 13 [style=solid label="FLOAT"]
  15 -> 14 [style=solid label="STRING"]
  15 -> 15 [style=solid label="'('"]
  15 -> 16 [style=solid label="'['"]
  15 -> 17 [style=dashed label="funcall"]
  15 -> 18 [style=dashed label="list"]
  15 -> 27 [style=dashed label="expr"]
  16 [label="State 16\n\l 15 list: '[' • args ']'\l"]
  16 -> 11 [style=solid label="IDENTIFIER"]
  16 -> 12 [style=solid label="INT"]
  16 -> 13 [style=solid label="FLOAT"]
  16 -> 14 [style=solid label="STRING"]
  16 -> 15 [style=solid label="'('"]
  16 -> 16 [style=solid label="'['"]
  16 -> 17 [style=dashed label="funcall"]
  16 -> 18 [style=dashed label="list"]
  16 -> 28 [style=dashed label="args"]
  16 -> 29 [style=dashed label="expr"]
  16 -> "16R18" [style=solid]
 "16R18" [label="R18", fillcolor=3, shape=diamond, style=filled]
  17 [label="State 17\n\l 20 expr: funcall •\l"]
  17 -> "17R20" [style=solid]
 "17R20" [label="R20", fillcolor=3, shape=diamond, style=filled]
  18 [label="State 18\n\l 24 expr: list •\l"]
  18 -> "18R24" [style=solid]
 "18R24" [label="R24", fillcolor=3, shape=diamond, style=filled]
  19 [label="State 19\n\l  7 cond: IF expr • ':' INDENT program DEDENT\l 25 expr: expr • ARITHOP expr\l 26     | expr • RELOP expr\l 27     | expr • LOGICOP expr\l"]
  19 -> 30 [style=solid label="LOGICOP"]
  19 -> 31 [style=solid label="RELOP"]
  19 -> 32 [style=solid label="ARITHOP"]
  19 -> 33 [style=solid label="':'"]
  20 [label="State 20\n\l  8 import: IMPORT IDENTIFIER •\l  9       | IMPORT IDENTIFIER • AS IDENTIFIER\l"]
  20 -> 34 [style=solid label="AS"]
  20 -> "20R8" [style=solid]
 "20R8" [label="R8", fillcolor=3, shape=diamond, style=filled]
  21 [label="State 21\n\l 10 import: FROM IDENTIFIER • IMPORT IDENTIFIER\l 11       | FROM IDENTIFIER • IMPORT IDENTIFIER AS IDENTIFIER\l"]
  21 -> 35 [style=solid label="IMPORT"]
  22 [label="State 22\n\l 13 assignment: IDENTIFIER ARITHASS • expr\l"]
  22 -> 11 [style=solid label="IDENTIFIER"]
  22 -> 12 [style=solid label="INT"]
  22 -> 13 [style=solid label="FLOAT"]
  22 -> 14 [style=solid label="STRING"]
  22 -> 15 [style=solid label="'('"]
  22 -> 16 [style=solid label="'['"]
  22 -> 17 [style=dashed label="funcall"]
  22 -> 18 [style=dashed label="list"]
  22 -> 36 [style=dashed label="expr"]
  23 [label="State 23\n\l 12 assignment: IDENTIFIER ASSIGNOP • expr\l"]
  23 -> 11 [style=solid label="IDENTIFIER"]
  23 -> 12 [style=solid label="INT"]
  23 -> 13 [style=solid label="FLOAT"]
  23 -> 14 [style=solid label="STRING"]
  23 -> 15 [style=solid label="'('"]
  23 -> 16 [style=solid label="'['"]
  23 -> 17 [style=dashed label="funcall"]
  23 -> 18 [style=dashed label="list"]
  23 -> 37 [style=dashed label="expr"]
  24 [label="State 24\n\l 14 funcall: IDENTIFIER '(' • args ')'\l"]
  24 -> 11 [style=solid label="IDENTIFIER"]
  24 -> 12 [style=solid label="INT"]
  24 -> 13 [style=solid label="FLOAT"]
  24 -> 14 [style=solid label="STRING"]
  24 -> 15 [style=solid label="'('"]
  24 -> 16 [style=solid label="'['"]
  24 -> 17 [style=dashed label="funcall"]
  24 -> 18 [style=dashed label="list"]
  24 -> 38 [style=dashed label="args"]
  24 -> 29 [style=dashed label="expr"]
  24 -> "24R18" [style=solid]
 "24R18" [label="R18", fillcolor=3, shape=diamond, style=filled]
  25 [label="State 25\n\l  0 $accept: program $end •\l"]
  25 -> "25R0" [style=solid]
 "25R0" [label="Acc", fillcolor=1, shape=diamond, style=filled]
  26 [label="State 26\n\l  1 program: statement program •\l"]
  26 -> "26R1" [style=solid]
 "26R1" [label="R1", fillcolor=3, shape=diamond, style=filled]
  27 [label="State 27\n\l 25 expr: expr • ARITHOP expr\l 26     | expr • RELOP expr\l 27     | expr • LOGICOP expr\l 28     | '(' expr • ')'\l"]
  27 -> 30 [style=solid label="LOGICOP"]
  27 -> 31 [style=solid label="RELOP"]
  27 -> 32 [style=solid label="ARITHOP"]
  27 -> 39 [style=solid label="')'"]
  28 [label="State 28\n\l 15 list: '[' args • ']'\l"]
  28 -> 40 [style=solid label="']'"]
  29 [label="State 29\n\l 16 args: expr •\l 17     | expr • ',' args\l 25 expr: expr • ARITHOP expr\l 26     | expr • RELOP expr\l 27     | expr • LOGICOP expr\l"]
  29 -> 30 [style=solid label="LOGICOP"]
  29 -> 31 [style=solid label="RELOP"]
  29 -> 32 [style=solid label="ARITHOP"]
  29 -> 41 [style=solid label="','"]
  29 -> "29R16" [style=solid]
 "29R16" [label="R16", fillcolor=3, shape=diamond, style=filled]
  30 [label="State 30\n\l 27 expr: expr LOGICOP • expr\l"]
  30 -> 11 [style=solid label="IDENTIFIER"]
  30 -> 12 [style=solid label="INT"]
  30 -> 13 [style=solid label="FLOAT"]
  30 -> 14 [style=solid label="STRING"]
  30 -> 15 [style=solid label="'('"]
  30 -> 16 [style=solid label="'['"]
  30 -> 17 [style=dashed label="funcall"]
  30 -> 18 [style=dashed label="list"]
  30 -> 42 [style=dashed label="expr"]
  31 [label="State 31\n\l 26 expr: expr RELOP • expr\l"]
  31 -> 11 [style=solid label="IDENTIFIER"]
  31 -> 12 [style=solid label="INT"]
  31 -> 13 [style=solid label="FLOAT"]
  31 -> 14 [style=solid label="STRING"]
  31 -> 15 [style=solid label="'('"]
  31 -> 16 [style=solid label="'['"]
  31 -> 17 [style=dashed label="funcall"]
  31 -> 18 [style=dashed label="list"]
  31 -> 43 [style=dashed label="expr"]
  32 [label="State 32\n\l 25 expr: expr ARITHOP • expr\l"]
  32 -> 11 [style=solid label="IDENTIFIER"]
  32 -> 12 [style=solid label="INT"]
  32 -> 13 [style=solid label="FLOAT"]
  32 -> 14 [style=solid label="STRING"]
  32 -> 15 [style=solid label="'('"]
  32 -> 16 [style=solid label="'['"]
  32 -> 17 [style=dashed label="funcall"]
  32 -> 18 [style=dashed label="list"]
  32 -> 44 [style=dashed label="expr"]
  33 [label="State 33\n\l  7 cond: IF expr ':' • INDENT program DEDENT\l"]
  33 -> 45 [style=solid label="INDENT"]
  34 [label="State 34\n\l  9 import: IMPORT IDENTIFIER AS • IDENTIFIER\l"]
  34 -> 46 [style=solid label="IDENTIFIER"]
  35 [label="State 35\n\l 10 import: FROM IDENTIFIER IMPORT • IDENTIFIER\l 11       | FROM IDENTIFIER IMPORT • IDENTIFIER AS IDENTIFIER\l"]
  35 -> 47 [style=solid label="IDENTIFIER"]
  36 [label="State 36\n\l 13 assignment: IDENTIFIER ARITHASS expr •\l 25 expr: expr • ARITHOP expr\l 26     | expr • RELOP expr\l 27     | expr • LOGICOP expr\l"]
  36 -> 30 [style=solid label="LOGICOP"]
  36 -> 31 [style=solid label="RELOP"]
  36 -> 32 [style=solid label="ARITHOP"]
  36 -> "36R13" [style=solid]
 "36R13" [label="R13", fillcolor=3, shape=diamond, style=filled]
  37 [label="State 37\n\l 12 assignment: IDENTIFIER ASSIGNOP expr •\l 25 expr: expr • ARITHOP expr\l 26     | expr • RELOP expr\l 27     | expr • LOGICOP expr\l"]
  37 -> 30 [style=solid label="LOGICOP"]
  37 -> 31 [style=solid label="RELOP"]
  37 -> 32 [style=solid label="ARITHOP"]
  37 -> "37R12" [style=solid]
 "37R12" [label="R12", fillcolor=3, shape=diamond, style=filled]
  38 [label="State 38\n\l 14 funcall: IDENTIFIER '(' args • ')'\l"]
  38 -> 48 [style=solid label="')'"]
  39 [label="State 39\n\l 28 expr: '(' expr ')' •\l"]
  39 -> "39R28" [style=solid]
 "39R28" [label="R28", fillcolor=3, shape=diamond, style=filled]
  40 [label="State 40\n\l 15 list: '[' args ']' •\l"]
  40 -> "40R15" [style=solid]
 "40R15" [label="R15", fillcolor=3, shape=diamond, style=filled]
  41 [label="State 41\n\l 17 args: expr ',' • args\l"]
  41 -> 11 [style=solid label="IDENTIFIER"]
  41 -> 12 [style=solid label="INT"]
  41 -> 13 [style=solid label="FLOAT"]
  41 -> 14 [style=solid label="STRING"]
  41 -> 15 [style=solid label="'('"]
  41 -> 16 [style=solid label="'['"]
  41 -> 17 [style=dashed label="funcall"]
  41 -> 18 [style=dashed label="list"]
  41 -> 49 [style=dashed label="args"]
  41 -> 29 [style=dashed label="expr"]
  41 -> "41R18" [style=solid]
 "41R18" [label="R18", fillcolor=3, shape=diamond, style=filled]
  42 [label="State 42\n\l 25 expr: expr • ARITHOP expr\l 26     | expr • RELOP expr\l 27     | expr • LOGICOP expr\l 27     | expr LOGICOP expr •\l"]
  42 -> 30 [style=solid label="LOGICOP"]
  42 -> 31 [style=solid label="RELOP"]
  42 -> 32 [style=solid label="ARITHOP"]
  42 -> "42R27d" [label="[LOGICOP, RELOP, ARITHOP]", style=solid]
 "42R27d" [label="R27", fillcolor=5, shape=diamond, style=filled]
  42 -> "42R27" [style=solid]
 "42R27" [label="R27", fillcolor=3, shape=diamond, style=filled]
  43 [label="State 43\n\l 25 expr: expr • ARITHOP expr\l 26     | expr • RELOP expr\l 26     | expr RELOP expr •\l 27     | expr • LOGICOP expr\l"]
  43 -> 30 [style=solid label="LOGICOP"]
  43 -> 31 [style=solid label="RELOP"]
  43 -> 32 [style=solid label="ARITHOP"]
  43 -> "43R26d" [label="[LOGICOP, RELOP, ARITHOP]", style=solid]
 "43R26d" [label="R26", fillcolor=5, shape=diamond, style=filled]
  43 -> "43R26" [style=solid]
 "43R26" [label="R26", fillcolor=3, shape=diamond, style=filled]
  44 [label="State 44\n\l 25 expr: expr • ARITHOP expr\l 25     | expr ARITHOP expr •\l 26     | expr • RELOP expr\l 27     | expr • LOGICOP expr\l"]
  44 -> 30 [style=solid label="LOGICOP"]
  44 -> 31 [style=solid label="RELOP"]
  44 -> 32 [style=solid label="ARITHOP"]
  44 -> "44R25d" [label="[LOGICOP, RELOP, ARITHOP]", style=solid]
 "44R25d" [label="R25", fillcolor=5, shape=diamond, style=filled]
  44 -> "44R25" [style=solid]
 "44R25" [label="R25", fillcolor=3, shape=diamond, style=filled]
  45 [label="State 45\n\l  7 cond: IF expr ':' INDENT • program DEDENT\l"]
  45 -> 1 [style=solid label="IF"]
  45 -> 2 [style=solid label="IMPORT"]
  45 -> 3 [style=solid label="FROM"]
  45 -> 4 [style=solid label="IDENTIFIER"]
  45 -> 50 [style=dashed label="program"]
  45 -> 6 [style=dashed label="statement"]
  45 -> 7 [style=dashed label="cond"]
  45 -> 8 [style=dashed label="import"]
  45 -> 9 [style=dashed label="assignment"]
  45 -> 10 [style=dashed label="funcall"]
  46 [label="State 46\n\l  9 import: IMPORT IDENTIFIER AS IDENTIFIER •\l"]
  46 -> "46R9" [style=solid]
 "46R9" [label="R9", fillcolor=3, shape=diamond, style=filled]
  47 [label="State 47\n\l 10 import: FROM IDENTIFIER IMPORT IDENTIFIER •\l 11       | FROM IDENTIFIER IMPORT IDENTIFIER • AS IDENTIFIER\l"]
  47 -> 51 [style=solid label="AS"]
  47 -> "47R10" [style=solid]
 "47R10" [label="R10", fillcolor=3, shape=diamond, style=filled]
  48 [label="State 48\n\l 14 funcall: IDENTIFIER '(' args ')' •\l"]
  48 -> "48R14" [style=solid]
 "48R14" [label="R14", fillcolor=3, shape=diamond, style=filled]
  49 [label="State 49\n\l 17 args: expr ',' args •\l"]
  49 -> "49R17" [style=solid]
 "49R17" [label="R17", fillcolor=3, shape=diamond, style=filled]
  50 [label="State 50\n\l  7 cond: IF expr ':' INDENT program • DEDENT\l"]
  50 -> 52 [style=solid label="DEDENT"]
  51 [label="State 51\n\l 11 import: FROM IDENTIFIER IMPORT IDENTIFIER AS • IDENTIFIER\l"]
  51 -> 53 [style=solid label="IDENTIFIER"]
  52 [label="State 52\n\l  7 cond: IF expr ':' INDENT program DEDENT •\l"]
  52 -> "52R7" [style=solid]
 "52R7" [label="R7", fillcolor=3, shape=diamond, style=filled]
  53 [label="State 53\n\l 11 import: FROM IDENTIFIER IMPORT IDENTIFIER AS IDENTIFIER •\l"]
  53 -> "53R11" [style=solid]
 "53R11" [label="R11", fillcolor=3, shape=diamond, style=filled]
}
